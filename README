#### Steps for running Garfiled++ @ ACCRE

Important Link

a ) https://garfieldpp.web.cern.ch/garfieldpp/
b ) https://www.vanderbilt.edu/accre/documentation/slurm/

debug push

1. Login to ACCRE account

## If using singularity container (required for code in folder quadgem_singularity), follow steps 2(a). 

2a.1. Build or obtain the singularity container file. 
Note : By default containers requires root access to build, so it would be best to build from local machine then upload to cluster. 
       The build recipe is contained in root directory and built using:
       $ sudo singularity build garfield.20210814 garfield.20210814.sif
 
2a.2. Load into container using
 $ singularity shell <path to image>/garfield.20210814.sif
 
2a.3. Load the necessary packages using the shellscript included in repo
 $ source setupgpp.sh

## If not, follow steps 2(b).

2b.1. Load the following modules as per the commands below
 $ module load GCC/6.4.0-2.28                                                                                                                             
 $ module load OpenMPI/2.1.1                                                                                                                              
 $ module load Pango/.1.41.0                                                                                                                              
 $ module load garfieldpp/2017.2-Python-2.7.14  

2b.2. Check whether the modules are loaded by issuing the following command
 $ module list

2b.3. Save the above modules by a name of your choice as per the command below
 $ module save <module_name>
Note : Replace <module_name> by name of your choice

2b.4. Open your login file (for example .bashrc file) and add the following line 
 module restore <module_name>

2b.5. Logout of ACCRE account and relogin and check whether modules are loaded properly or not by issuing command as in step 3. 

3a. If using CMake (default to singularity projects), go into the directory/build folder and use the following commands:
 $cmake ..
 $make

3b. If using make (default to non-singularity projects), compile either of the code by going into the folder and issuing following command:
 $make

Note : Every change in the source file (single_gem.C or triple_gem.C ) should be followed by the compilation of the code in order for the changes to take effect. 

4. If the compilation is successful then one will get executables, without extensions.

5. For running interactively just issue the following commands
  $ ./<executable> 1
  1 can be substituted with any number to prevent overwriting existing files.

One will get output ROOT file within OUTFILE folder 

6. For running slurm batch jobs, cd into the submission folder and do
  $ sbatch ../<job file>.slurm	

These will provide multiple ROOT files for each slurm job. One has to then merge these ROOT files for analysis purpose.
